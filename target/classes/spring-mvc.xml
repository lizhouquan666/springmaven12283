<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd       http://www.springframework.org/schema/context      http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <context:component-scan base-package="com.wanxi.controller"/>
<!--    HandlerMapping的实现类的作用-->
<!--    实现类RequestMappingHandlerMapping，它会处理@RequestMapping 注解，并将其注册到请求映射表中。-->

<!--    HandlerAdapter的实现类的作用-->
<!--    实现类RequestMappingHandlerAdapter，则是处理请求的适配器，确定调用哪个类的哪个方法，并且构造方法参数，返回值。-->

<!--    当配置了mvc:annotation-driven/后，Spring就知道了我们启用注解驱动。-->
<!--    然后Spring通过context:component-scan/标签的配置，-->
<!--    会自动为我们将扫描到的@Component，@Controller，@Service，@Repository等注解标记的组件注册到工厂中，-->
<!--    来处理我们的请求。-->
    <mvc:annotation-driven/>
    <mvc:interceptors>
        <mvc:interceptor>
            <!--拦截-->
            <mvc:mapping path="/**"/>
            <!--放行-->
            <mvc:exclude-mapping path="/html/login.html"/>
            <mvc:exclude-mapping path="/js/**"/>
            <mvc:exclude-mapping path="/X-admin/**"/>
            <mvc:exclude-mapping path="/css/**"/>
            <mvc:exclude-mapping path="/X-admin/css/**"/>
            <mvc:exclude-mapping path="/user/**"/>
            <mvc:exclude-mapping path="/product/**"/>
            <mvc:exclude-mapping path="/upload/**"/>
            <mvc:exclude-mapping path="/code/checkCode"/>
            <bean class="com.wanxi.interceptor.Interceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
    <mvc:annotation-driven>
        <!--消息转换器-->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <!--设置接口生产的任何数据都设置成UTF-8 一次配置  永久搞定-->
                        <value>application/json;charset=UTF-8</value>
                        <value>application/xml;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <mvc:default-servlet-handler/>
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>
        <property name="suffix" value=".html"/>
    </bean>
</beans>